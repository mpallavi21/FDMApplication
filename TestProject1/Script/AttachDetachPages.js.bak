
// =====================================================================
// Author:        Bharath
// Function:      clickOnAttachApplication
// Description:   Navigates through the application menu using OCR to attach
//                a connected application node from the tree view.
// Created On:    [27-06-2025]
// Modified On:   
// =====================================================================
function clickOnAttachApplication() {
  try {
    let HCMClient = Aliases.HCMClient;
    let frmHCMClientMain = HCMClient.ClientMainWindow;

    // Click on 'Tools' menu using OCR recognition
    OCR.Recognize(frmHCMClientMain.mainMenu).BlockByText("Tools").Click();
    Log.Message("Clicked 'Tools' from the main menu.");

    // Click on 'Applications' from the dropdown
    OCR.Recognize(HCMClient.DropDownForm.SubSmartControl).BlockByText("Applications").Click();
    Log.Message("Selected 'Applications' from the Tools dropdown.");

    // Expand and attach application via keyboard in the connected tree view
    frmHCMClientMain.panelLeftPanMain.tabControlLeftPanMain.tabPageOnlineView
      .panelOnlineView.panelTabControlOnlineView.tabControlOnlineView
      .tabConnected.treeView.Keys("[Right][Enter]");

    Log.Message("Attached application from the connected applications list.");
  } catch (error) {
    Log.Error("Failed to attach application: " + error.message);
  }
}



function test(){
  clickOnAttachApplication()
  uploadAppAttachPackageFile("C:\\Program Files (x86)\\Honeywell\\FDM\\ClientMachine\\Bin","HCMClient")
  DetachApplication()
}
// =====================================================================
// Author:        Bharath
// Function:      uploadAppAttachPackageFile
// Description:   Opens the Application Selection dialog, navigates to the specified
//                folder, selects the package file, and uploads it via file dialog.
// Created On:    27-June-2025
// Modified On:   --
// =====================================================================
function uploadAppAttachPackageFile(folderPath, fileName) {
  try {
    let HCMClient = Aliases.HCMClient;

    // Access the Application Selection dialog
    let ApplicationSelectionDlg = HCMClient.ApplicationSelectionDlg;

    if (ApplicationSelectionDlg.Exists) {
      // Click the Browse button to open file dialog
      ApplicationSelectionDlg.buttonBrowse.Click();

      let dlgOpen = HCMClient.dlgOpen;
      let progress = dlgOpen.WorkerW.ReBarWindow32.AddressBandRoot.progress;

      // Navigate to the folder path
      progress.BreadcrumbParent.toolbar.ClickItem("All locations");
      progress.comboBox.SetText(folderPath);

      // Select the desired file to upload
      dlgOpen.OpenFile(folderPath + "\\" + fileName);

      Log.Message("File '" + fileName + "' added successfully from: " + folderPath);

      // Confirm if the file has been uploaded successfully
      if (ApplicationSelectionDlg.buttonOK.Enabled) {
        ApplicationSelectionDlg.buttonOK.Click()
        Log.Message("File '" + fileName + "' uploaded successfully.");
      } else {
        Log.Error("Upload failed: OK button is not enabled.");
        if (ApplicationSelectionDlg.buttonCancel) {
          return false;
        }
      }
    } else {
      Log.Warning("Application Selection dialog not found.");
    }
    HCMClient.dlgFDMConfiguration.btnOK.WaitProperty("Exists",true,10000)
    if(HCMClient.dlgFDMConfiguration.btnOK.Exists){
      caption = Aliases.HCMClient.dlgFDMConfiguration.Window("Static", "*", 1).WndCaption
      HCMClient.dlgFDMConfiguration.btnOK.Click()
      Log.Message(caption)
    }
  } catch (error) {
    Log.Error("Failed to upload application attach package file: " + error.message);
  }
}


// =====================================================================
// Author:        Bharath
// Function:      DetachApplication
// Description:   Navigates through the application menu using OCR to detach
//                a connected application node from the tree view.
// Created On:    27-June-2025
// Modified On:   [Updated with robust waits and checks]
// =====================================================================
function DetachApplication() {
  try {
    let HCMClient = Aliases.HCMClient;
    let frmHCMClientMain = HCMClient.ClientMainWindow;

    // === Step 1: Click 'Tools' using OCR ===
    if (frmHCMClientMain.mainMenu.Exists) {
      OCR.Recognize(frmHCMClientMain.mainMenu).BlockByText("Tools").Click();
      Log.Message("Clicked 'Tools' from the main menu.");
    } else {
      Log.Error("Main menu not found.");
      return;
    }

    // === Step 2: Click 'Applications' from the dropdown ===
    if (HCMClient.DropDownForm.SubSmartControl.Exists) {
      OCR.Recognize(HCMClient.DropDownForm.SubSmartControl).BlockByText("Applications").Click();
      Log.Message("Selected 'Applications' from the Tools dropdown.");
    } else {
      Log.Error("Applications option in dropdown not found.");
      return;
    }

    // === Step 3: Navigate and detach from tree view ===
    let treeView = frmHCMClientMain.panelLeftPanMain.tabControlLeftPanMain.tabPageOnlineView
      .panelOnlineView.panelTabControlOnlineView.tabControlOnlineView.tabConnected.treeView;

    if (treeView.Exists) {
      treeView.Keys("[Right][Down][Enter]");
      Log.Message("Detached application from the connected applications list.");
    } else {
      Log.Error("Connected applications tree view not found.");
      return;
    }
    
    var dlgFDM = Aliases.HCMClient.dlgFDM;
    var dlgFDMConfiguration = Aliases.HCMClient.dlgFDMConfiguration
    var staticText = dlgFDM.Static;

    if (staticText.Exists && staticText.WndCaption === "There are no items for selection") {
      Log.Message("Warning detected: 'There are no items for selection'");
    
      if (dlgFDMConfiguration.btnOK.Exists && dlgFDMConfiguration.btnOK.Enabled) {
        dlgFDMConfiguration.btnOK.Click();
        Log.Message("'OK' button clicked to dismiss the warning.");
        return false
      } else {
        Log.Error("'OK' button not found or not enabled.");
      }
    } else {
      Log.Message("No warning message displayed.");
    }

    // === Step 4: Handle Resource Selection dialog ===
    let resourceSelectionDlg = HCMClient.WaitAliasChild("ResourceSelectionDlg", 5000);

    if (resourceSelectionDlg.Exists) {
      resourceSelectionDlg.fpSpread1.Click(229, 33);
      Log.Message("Clicked device selection grid.");

      if (resourceSelectionDlg.OKButton.Exists && resourceSelectionDlg.OKButton.Enabled) {
        resourceSelectionDlg.OKButton.Click();
        Log.Message("Clicked 'OK' on Resource Selection dialog.");
      } else {
        Log.Error("'OK' button is not available or enabled.");
        return;
      }

      if (HCMClient.dlgFDMConfiguration.btnYes.Exists) {
        let WndCaption = HCMClient.dlgFDM.Static.WndCaption;
        HCMClient.dlgFDMConfiguration.btnYes.Click();
        Log.Message("Confirmation dialog caption: " + WndCaption);
      } else {
        Log.Warning("'Yes' button not found in FDM Configuration dialog.");
      }

    } else {
      Log.Error("Resource Selection dialog not found.");
      return;
    }

    // === Step 5: Final FDM Configuration confirmation ===
    let configDlg = HCMClient.WaitAliasChild("dlgFDMConfiguration", 10000);

    if (configDlg.Exists && configDlg.btnOK.Exists) {
      let caption = configDlg.Window("Static", "*", 1).WndCaption;
      configDlg.btnOK.ClickButton();
      Log.Message("Final confirmation: " + caption);
    } else {
      Log.Error("FDM Configuration confirmation dialog not found.");
    }

  } catch (error) {
    Log.Error("Failed to detach application: " + error.message);
  }
}
